{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2024-10-28T12:11:18.513Z",
    "end": "2024-10-28T12:11:50.834Z",
    "duration": 32321,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "81be1efb-118d-4d47-a64b-6dc263f1c597",
      "title": "",
      "fullFile": "C:\\Users\\anmol.dhama\\Desktop\\Api-Automation\\test-internal-apis\\bulk_order_creation.js",
      "file": "\\test-internal-apis\\bulk_order_creation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "31598a28-82dc-4493-ac94-f75f4922fcee",
          "title": "Create Order API",
          "fullFile": "C:\\Users\\anmol.dhama\\Desktop\\Api-Automation\\test-internal-apis\\bulk_order_creation.js",
          "file": "\\test-internal-apis\\bulk_order_creation.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should generate an login token",
              "fullTitle": "Create Order API should generate an login token",
              "timedOut": false,
              "duration": 584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = JSON.parse(seller_portal_login_Payload());\n        \n        console.log(payload);\n        const response = await loginToSellerPortal(payload);\n        console.log(response.data);\n        //store login token\n        logintoken = response.data.token;",
              "err": {},
              "uuid": "58474822-6af7-4b0a-9200-b0004c950559",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create orders in bulk",
              "fullTitle": "Create Order API should create orders in bulk",
              "timedOut": false,
              "duration": 753,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const form = bulk_order_create();\n\ntry {\n  const response = await axios.post('https://uatapi.rapidshyp.com/session/orders/batch_orders', form, {\n    headers: {\n      'Authorization': `Bearer ${logintoken}`,\n      ...form.getHeaders(),\n    },\n  });\n      \n  console.log('Response:', response.data);\n\n  const msg = 'Bulk orders processed, please check the status of the orders.';\n  const expectedAssertions = await getExpectedAssertionsInternalBulkActions(msg);\n// Validate the response for the current payload and assertions\nvalidateBulkOrderResponse(response.data, expectedAssertions);\n      } catch (error) {\nconsole.error(`Error in payload`, error.response ? error.response.data : error.message);\nif (error.response) {\n  expect.fail(`API request failed for payload with status: ${error.response.status}, data: ${JSON.stringify(error.response.data)}`);\n} else {\n  expect.fail(`Unexpected error at payload: ${error.message}`);\n}\n      }",
              "err": {},
              "uuid": "433a19f2-dfa2-4ea7-bdd3-706935dc8827",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate all the orders",
              "fullTitle": "Create Order API should validate all the orders",
              "timedOut": false,
              "duration": 10488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await delay(10000);\n     const url = `https://uatapi.rapidshyp.com/session/orders/get_orders?page_no=0&order_status=APPROVAL_PENDING&date_filter=2024-09-28_2024-10-28&records_per_page=100`;\n        \n    const headers = {\n        'Authorization': `Bearer ${logintoken}`,\n        'Content-Type': 'application/json'\n    };\n    try {\n      const apiOrders = await axios.get(url, { headers });\n      const arrRecords = mapAPIOrders(apiOrders.data.records);\n      console.log('Records from API:', arrRecords[0].order_id);\n  \n      const excelData = await FetchExcelData(\"C:/Users/anmol.dhama/Downloads/sample_bulk_order_creation (4).csv\");\n      const arr = mapExcelOrders(excelData.validData);\n      const order_status = \"APPROVAL_PENDING\";\n  \n      arr.forEach(excelOrder => {\n          const found = compareOrders(arrRecords, excelOrder);\n  \n          if (found) {\n              order_ids_for_approval.push(found.order_id);\n              console.log('Order Matched Approval Pending Tab:', excelOrder.seller_order_id);\n          } else {\n              console.log('Order not matched Approval Pending Tab:', excelOrder.seller_order_id);\n          }\n      });\n  \n      console.log(\"Order IDs for Approval:\", order_ids_for_approval);\n  \n  } catch (error) {\n      console.error('Error fetching data or comparing orders:', error);\n  }",
              "err": {},
              "uuid": "bd0bbadd-034a-4384-8a8b-3c14c0817538",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should approve the orders in bulk using approve order api",
              "fullTitle": "Create Order API should approve the orders in bulk using approve order api",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\"order_ids\":order_ids_for_approval,\"approve_all_orders\":false,\"order_status\":\"APPROVAL_PENDING\",\"date_filter\":\"2024-09-28_2024-10-28\",\"order_id\":\"\",\"name\":\"\",\"email\":\"\",\"phone\":\"\",\"payment\":\"\",\"sku\":\"\",\"product_name\":\"\",\"pickup_address_name\":\"\"}\ntry {\n  const response = await axios.post('https://uatapi.rapidshyp.com/session/sellers/approve_pending_orders', payload, {\n    headers: {\n      'Authorization': `Bearer ${logintoken}`\n    },\n  });\n    \n  console.log('Approval Response:', response.data);\n\n     const msg = 'Order approval is in progress, please visit to activity logs for check status.';\n     const expectedAssertions = await getExpectedAssertionsInternalBulkActions(msg);\n// Validate the response for the current payload and assertions\nvalidateBulkOrderResponse(response.data, expectedAssertions);\n    } catch (error) {\nconsole.error(`Error in payload`, error.response ? error.response.data : error.message);\nif (error.response) {\n  expect.fail(`API request failed for payload with status: ${error.response.status}, data: ${JSON.stringify(error.response.data)}`);\n} else {\n  expect.fail(`Unexpected error at payload: ${error.message}`);\n}\n    }",
              "err": {},
              "uuid": "e8a5285e-f0c2-4604-a655-67469d81d4db",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate the approved orders inside the processing tab",
              "fullTitle": "Create Order API should validate the approved orders inside the processing tab",
              "timedOut": false,
              "duration": 2524,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await delay(2000);\n\nconst url = `https://uatapi.rapidshyp.com/session/orders/get_orders?page_no=0&order_status=PROCESSING&date_filter=2024-09-28_2024-10-28&records_per_page=100`;\n  \nconst headers = {\n    'Authorization': `Bearer ${logintoken}`,\n    'Content-Type': 'application/json'\n};\n  \ntry {\n  const apiOrders = await axios.get(url, { headers });\n  const arrRecords = apiOrders.data.records;\n    \n  const apiOrderIds = new Set(arrRecords.map(apiOrder => apiOrder.order_id));\n    \n  order_ids_for_approval.forEach(orderId => {\n      if (apiOrderIds.has(orderId)) {\n          console.log('Order Matched Processing Tab:', orderId);\n      } else {\n          console.log('Order not matched Processing Tab:', orderId);\n      }\n  });\n    \n    } catch (error) {\n  console.error('Error fetching data or comparing orders:', error);\n    }",
              "err": {},
              "uuid": "baab03ec-b750-4006-9f43-8ac4a6dfe0ad",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate the shipment created inside created tab",
              "fullTitle": "Create Order API should validate the shipment created inside created tab",
              "timedOut": false,
              "duration": 395,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const url = `https://uatapi.rapidshyp.com/session/shipment/fetch_shipment?page_no=0&shipment_order_status=CREATED&date_filter=2024-07-28_2024-10-28&records_per_page=100&sort_by_field=LUT&sorting_order=DESCENDING`;\n        \n      const headers = {\n          'Authorization': `Bearer ${logintoken}`,\n          'Content-Type': 'application/json'\n      };\n  \n      try {\n        const apiOrders = await axios.get(url, { headers });\n        const arrRecords = apiOrders.data.records;\n    \n        const apiOrderIds = new Set(arrRecords.map(apiOrder => apiOrder.order_id));\n    \n        order_ids_for_approval.forEach(orderId => {\n            if (apiOrderIds.has(orderId)) {\n              \n                const matchedOrder = arrRecords.find(apiOrder => apiOrder.order_id === orderId);\n                \n                if (matchedOrder) {\n                    shipment_ids_for_ship_now.push(matchedOrder._id);\n                    console.log('Shipment Found for order id Created Tab:', orderId);\n                }\n            } else {\n                console.log('Shipment not Found for order id Created Tab:', orderId);\n            }\n        });\n    \n    } catch (error) {\n        console.error('Error fetching data or comparing orders:', error);\n    }",
              "err": {},
              "uuid": "5ffc2698-b85e-471b-852b-3151751a9a73",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should store the wallet balance before ship now",
              "fullTitle": "Create Order API should store the wallet balance before ship now",
              "timedOut": false,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const headers = { 'Authorization': `Bearer ${logintoken}` };\n\ntry {\n    const response = await getWalletBalance('/payments/get_wallet_balance', headers);\n  \n    wallet_balance = response.data.amount;\n    console.log(wallet_balance);\n} catch (error) {\n    console.error('Error fetching wallet balance:', error.response ? error.response.data : error.message);\n    throw error;\n}",
              "err": {},
              "uuid": "5dd769b6-da3e-4ef1-bf7a-8a7a29a9f562",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should ship shipments in bulk",
              "fullTitle": "Create Order API should ship shipments in bulk",
              "timedOut": false,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\"shipment_id\":shipment_ids_for_ship_now,\"process_all_shipments\":false,\"active_tab\":\"\",\"date_filter\":\"2024-07-28_2024-10-28\",\"order_id\":\"\",\"name\":\"\",\"email\":\"\",\"phone\":\"\",\"payment\":\"\",\"awb_number\":\"\",\"courier\":\"\",\"status\":\"\",\"channel\":\"\",\"pickup_ids\":null}\n      try {\n        const response = await axios.post('https://uatapi.rapidshyp.com/session/sellers/shipper/bulk_shipment_courier_allocation', payload, {\n          headers: {\n            'Authorization': `Bearer ${logintoken}`\n          },\n        });\n    \n        console.log('Approval Response:', response.data);\n     const shipment_count = shipment_ids_for_ship_now.length;\n     const msg = `${shipment_count} shipments are under process for courier assignment. Please check the status after some time.`;\n     const expectedAssertions = await getExpectedAssertionsInternalBulkActions(msg);\n      // Validate the response for the current payload and assertions\n      validateBulkOrderResponse(response.data, expectedAssertions);\n    } catch (error) {\n      console.error(`Error in payload`, error.response ? error.response.data : error.message);\n      if (error.response) {\n        expect.fail(`API request failed for payload with status: ${error.response.status}, data: ${JSON.stringify(error.response.data)}`);\n      } else {\n        expect.fail(`Unexpected error at payload: ${error.message}`);\n      }\n    }",
              "err": {},
              "uuid": "b7153280-dab7-4f7b-b23f-c0fc50fa0a34",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate the shipments details inside the assigned tab after bulk ship",
              "fullTitle": "Create Order API should validate the shipments details inside the assigned tab after bulk ship",
              "timedOut": false,
              "duration": 5397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await delay(5000);\n\nconst url = `https://uatapi.rapidshyp.com/session/shipment/fetch_shipment?page_no=0&shipment_order_status=ASSIGNED&date_filter=2024-07-28_2024-10-28&records_per_page=100&sort_by_field=LUT&sorting_order=DESCENDING`;\n  \nconst headers = {\n    'Authorization': `Bearer ${logintoken}`,\n    'Content-Type': 'application/json'\n};\n  \ntry {\n  const apiShipments = await axios.get(url, { headers });\n  const arrRecords = apiShipments.data.records;\n    \n  const apiShipmentIds = new Set(arrRecords.map(apiOrder => apiOrder._id));\n    \n  shipment_ids_for_ship_now.forEach(shipmentId => {\n      if (apiShipmentIds.has(shipmentId)) {\n          console.log('Shipment Matched Assigned Tab:', shipmentId);\n      } else {\n          console.log('Shipment not matched Assigned Tab:', shipmentId);\n      }\n  });\n    \n    } catch (error) {\n  console.error('Error fetching data or comparing orders:', error);\n    }",
              "err": {},
              "uuid": "34fdaf0c-967a-40bc-8b0e-20e1b11cc3d0",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should schedule pickup in bulk from assigned tab",
              "fullTitle": "Create Order API should schedule pickup in bulk from assigned tab",
              "timedOut": false,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\"shipment_id\":shipment_ids_for_ship_now,\"action_type\":\"SHIPMENT\",\"process_all_shipments\":false,\"active_tab\":\"\",\"date_filter\":\"2024-07-28_2024-10-28\",\"order_id\":\"\",\"name\":\"\",\"email\":\"\",\"phone\":\"\",\"payment\":\"\",\"awb_number\":\"\",\"courier\":\"\",\"status\":\"\",\"channel\":\"\",\"pickup_ids\":null}\ntry {\n  const response = await axios.post('https://uatapi.rapidshyp.com/session/orders/schedule_pickup', payload, {\n    headers: {\n      'Authorization': `Bearer ${logintoken}`\n    },\n  });\n\n     const msg = `The schedule pickup is currently in progress...`;\n     const expectedAssertions = await getExpectedAssertionsInternalBulkActions(msg);\n// Validate the response for the current payload and assertions\nvalidateBulkOrderResponse(response.data, expectedAssertions);\n    } catch (error) {\nconsole.error(`Error in payload`, error.response ? error.response.data : error.message);\nif (error.response) {\n  expect.fail(`API request failed for payload with status: ${error.response.status}, data: ${JSON.stringify(error.response.data)}`);\n} else {\n  expect.fail(`Unexpected error at payload: ${error.message}`);\n}\n    }",
              "err": {},
              "uuid": "573c675a-5618-4a0a-b6c3-351538d3f3ee",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate the shipments details inside the ready to ship tab after bulk pickup schedule",
              "fullTitle": "Create Order API should validate the shipments details inside the ready to ship tab after bulk pickup schedule",
              "timedOut": false,
              "duration": 5445,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await delay(5000);\n\nconst url = `https://uatapi.rapidshyp.com/session/shipment/fetch_shipment?page_no=0&shipment_order_status=READY_TO_SHIP&date_filter=2024-07-28_2024-10-28&records_per_page=100&sort_by_field=LUT&sorting_order=DESCENDING`;\n  \nconst headers = {\n    'Authorization': `Bearer ${logintoken}`,\n    'Content-Type': 'application/json'\n};\n  \ntry {\n  const apiShipments = await axios.get(url, { headers });\n  const arrRecords = apiShipments.data.records;\n    \n  const apiShipmentIds = new Set(arrRecords.map(apiOrder => apiOrder._id));\n    \n  shipment_ids_for_ship_now.forEach(shipmentId => {\n      if (apiShipmentIds.has(shipmentId)) {\n          console.log('Shipment Matched Ready To Ship Tab:', shipmentId);\n      } else {\n          console.log('Shipment not matched Ready To Ship Tab:', shipmentId);\n      }\n  });\n    \n    } catch (error) {\n  console.error('Error fetching data or comparing orders:', error);\n    }",
              "err": {},
              "uuid": "50589b48-0487-419a-bb06-6f04b42946eb",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should manifest in bulk from ready to ship tab",
              "fullTitle": "Create Order API should manifest in bulk from ready to ship tab",
              "timedOut": false,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\"shipment_id\":shipment_ids_for_ship_now,\"action_type\":\"SHIPMENT\",\"process_all_shipments\":false,\"active_tab\":\"\",\"date_filter\":\"2024-07-28_2024-10-28\",\"order_id\":\"\",\"name\":\"\",\"email\":\"\",\"phone\":\"\",\"payment\":\"\",\"awb_number\":\"\",\"courier\":\"\",\"status\":\"\",\"channel\":\"\",\"pickup_ids\":null}\ntry {\n  const response = await axios.post('https://uatapi.rapidshyp.com/session/orders/create_manifest', payload, {\n    headers: {\n      'Authorization': `Bearer ${logintoken}`\n    },\n  });\n\n     const msg = `The schedule pickup is currently in progress...`;\n     const expectedAssertions = await getExpectedAssertionsInternalBulkActions(msg);\n// Validate the response for the current payload and assertions\nvalidateBulkOrderResponse(response.data, expectedAssertions);\n    } catch (error) {\nconsole.error(`Error in payload`, error.response ? error.response.data : error.message);\nif (error.response) {\n  expect.fail(`API request failed for payload with status: ${error.response.status}, data: ${JSON.stringify(error.response.data)}`);\n} else {\n  expect.fail(`Unexpected error at payload: ${error.message}`);\n}\n    }",
              "err": {},
              "uuid": "b5b637d9-ca93-48c5-a10d-b903068feaca",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate the status of shipments after manifest in bulk",
              "fullTitle": "Create Order API should validate the status of shipments after manifest in bulk",
              "timedOut": false,
              "duration": 5994,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await delay(5000);\n\nconst url = `https://uatapi.rapidshyp.com/session/shipment/fetch_shipment?page_no=0&shipment_order_status=READY_TO_SHIP&date_filter=2024-07-28_2024-10-28&records_per_page=100&sort_by_field=LUT&sorting_order=DESCENDING`;\n  \nconst headers = {\n    'Authorization': `Bearer ${logintoken}`,\n    'Content-Type': 'application/json'\n};\n  \ntry {\n  const apiShipments = await axios.get(url, { headers });\n  const arrRecords = apiShipments.data.records;\n    \n  const manifestedShipments = new Set(\n      arrRecords\n          .filter(apiOrder => apiOrder.shipment_order_status === \"MANIFESTED\")\n          .map(apiOrder => apiOrder._id)\n  );\n  console.log(\"manifestedShipments\",manifestedShipments);\n  shipment_ids_for_ship_now.forEach(shipmentId => {\n      if (manifestedShipments.has(shipmentId)) {\n          console.log('Shipment Matched with manifested status Ready To Ship Tab:', shipmentId);\n      } else {\n          console.log('Shipment not matched with manifested status Ready To Ship Tab:', shipmentId);\n      }\n  });\n    \n    } catch (error) {\n  console.error('Error fetching data or comparing shipments:', error);\n    }",
              "err": {},
              "uuid": "e50a7a10-1b99-4d5d-914c-7860f2931dae",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should de-allocate shipments after manifestation",
              "fullTitle": "Create Order API should de-allocate shipments after manifestation",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\"shipment_id\":shipment_ids_for_ship_now,\"action_type\":\"SHIPMENT\",\"process_all_shipments\":false,\"active_tab\":\"\",\"date_filter\":\"2024-07-28_2024-10-28\",\"order_id\":\"\",\"name\":\"\",\"email\":\"\",\"phone\":\"\",\"payment\":\"\",\"awb_number\":\"\",\"courier\":\"\",\"status\":\"\",\"channel\":\"\",\"pickup_ids\":null}\n      try {\n        const response = await axios.post('https://uatapi.rapidshyp.com/session/sellers/shipper/bulk_shipment_courier_deallocation', payload, {\n          headers: {\n            'Authorization': `Bearer ${logintoken}`\n          },\n        });\n     const shipment_count = shipment_ids_for_ship_now.length;\n     const msg = `${shipment_count} shipments are under process for courier de-allocation. Please check the status after some time.`;\n     const expectedAssertions = await getExpectedAssertionsInternalBulkActions(msg);\n      // Validate the response for the current payload and assertions\n      validateBulkOrderResponse(response.data, expectedAssertions);\n    } catch (error) {\n      console.error(`Error in payload`, error.response ? error.response.data : error.message);\n      if (error.response) {\n        expect.fail(`API request failed for payload with status: ${error.response.status}, data: ${JSON.stringify(error.response.data)}`);\n      } else {\n        expect.fail(`Unexpected error at payload: ${error.message}`);\n      }\n    }",
              "err": {},
              "uuid": "2b081259-ee6f-4a5a-becc-f9b02fb0699c",
              "parentUUID": "31598a28-82dc-4493-ac94-f75f4922fcee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58474822-6af7-4b0a-9200-b0004c950559",
            "433a19f2-dfa2-4ea7-bdd3-706935dc8827",
            "bd0bbadd-034a-4384-8a8b-3c14c0817538",
            "e8a5285e-f0c2-4604-a655-67469d81d4db",
            "baab03ec-b750-4006-9f43-8ac4a6dfe0ad",
            "5ffc2698-b85e-471b-852b-3151751a9a73",
            "5dd769b6-da3e-4ef1-bf7a-8a7a29a9f562",
            "b7153280-dab7-4f7b-b23f-c0fc50fa0a34",
            "34fdaf0c-967a-40bc-8b0e-20e1b11cc3d0",
            "573c675a-5618-4a0a-b6c3-351538d3f3ee",
            "50589b48-0487-419a-bb06-6f04b42946eb",
            "b5b637d9-ca93-48c5-a10d-b903068feaca",
            "e50a7a10-1b99-4d5d-914c-7860f2931dae",
            "2b081259-ee6f-4a5a-becc-f9b02fb0699c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32299,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome"
      },
      "version": "6.2.0"
    }
  }
}